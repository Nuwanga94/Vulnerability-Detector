package VulDetect;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;



public class Output {
	
	public static final String filePath = "VUL.json";
	private static double[] output;
	private static String[] vulnerability;
	private List<String> packageName;
	private List<String> className;
	FileWriter file;
	
	public Output() throws JSONException {
		output = new Detect().bb; 		
		
		vulnerability = new String[output.length];
		setVul();
		DataRead();
		Create();
	}
	
	private static void setVul() {
		// map vulnerable or not
		for (int i = 0; i < output.length; i++) {
			if(output[i]==0) {
				vulnerability[i]="Non-vulnerable";
			}else if(output[i]==1) {
				vulnerability[i]="Vulnerable";
			}else {
				vulnerability[i]="Null";
			}
		}
		
	}
	
	private void Create() throws JSONException {
		
 
		// create JSON object
        JSONArray classes = new JSONArray();

        for (int i = 0; i < output.length; i++) {
        	
			JSONObject ob = new JSONObject();
			
			ob.put("package", packageName.get(i));
			ob.put("class", className.get(i));
			ob.put("vulnerability", vulnerability[i]);
			
			classes.put(ob);
			System.out.println(ob);
		}
 
        // write to json file
        try {
        	file = new FileWriter(filePath);
            file.write(classes.toString());
 
        } catch (IOException e) {
            e.printStackTrace();
 
        } finally {
 
            try {
                file.flush();
                file.close();
            } catch (IOException e) {               
                e.printStackTrace();
            }
        }

			
	}
	
	private void DataRead() {
		
		// insert class details
        String dataFile = "ClassDetails.txt";
        BufferedReader br = null;
        
        // split lines and tabs
        String line ="";
        String tabSplit = "\t";
        
        packageName = new ArrayList<String>();  
        className = new ArrayList<String>(); 
        
        
        try {
        	
        	// read file
            br = new BufferedReader(new FileReader(dataFile));           
            line = br.readLine();
            ArrayList<String> ar = new ArrayList<String>();
            int lines = 0;
            
            
            
            while ((line = br.readLine()) != null) {
            	ar.add(line);
            	lines++;
            }
                     
            for(String xx:ar) {
            		String[] data= xx.split(tabSplit); 
                    packageName.add(data[0]);
                    className.add(data[1]);
            	}
                    
 
                        	
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
        	
            if (br != null) {
            	try {
                    br.close();
                    
                } catch (IOException e) {
                    e.printStackTrace();
                } 
            }
        }
    }
}
